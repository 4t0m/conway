{"version":3,"sources":["webpack:///webpack/bootstrap ffae883c1c3b948cfc23","webpack:///./lib/util.js","webpack:///./lib/cell.js","webpack:///./lib/command.js","webpack:///./lib/board.js","webpack:///./lib/game.js","webpack:///./lib/adversary.js","webpack:///./lib/cursor.js","webpack:///./lib/generals.js","webpack:///./lib/special_cells.js"],"names":["colors","eachHTMLCell","gameBoard","callback","grid","forEach","row","rowIdx","cell","colIdx","htmlCell","document","getElementById","populateHTML","htmlGrid","htmlRow","insertRow","id","insertCell","classList","add","color","mountain","king","innerHTML","count","contains","city","updateHTML","remove","isHidden","unselectOtherCells","board","shuffle","array","counter","length","index","Math","floor","random","temp","getNextCoordinates","direction","nextId","coordinates","split","map","parseInt","char","console","log","Cell","otherCell","Command","nextCoordinates","nextCell","capture","removeFog","Board","populateBoard","kings","allCells","filter","cities","i","push","j","k","pop","reduce","row1","row2","concat","find","Game","cursor","adversary","movementInterval","setInterval","iterateMovement","bind","cityInterval","iterateCityGeneration","territoryInterval","iterateTerritoryGeneration","userCommand","nextMove","execute","winner","endGame","generateTroops","capturedTerritory","clearInterval","alert","removeIntervals","Adversary","moves","mode","explore","attack","shift","canSeePlayer","newMoves","Cursor","currentHTMLCell","getElementsByClassName","every","coord","currentCell","findCell","nextHTMLCell","join","game","selectCell","e","target","currentTarget","stopPropagation","addEventListener","key","clearMoves","move","City","King","Mountain","Object","freeze"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ffae883c1c3b948cfc23","const colors = [\"red\", \"blue\", \"unoccupied\"];\n\nconst eachHTMLCell = function (gameBoard, callback) {\n  gameBoard.grid.forEach( (row, rowIdx) => {\n    row.forEach((cell, colIdx) => {\n      let htmlCell = document.getElementById(`${rowIdx}-${colIdx}`);\n      callback(htmlCell);\n    });\n  });\n};\n\nexport const populateHTML = function (gameBoard, htmlGrid) {\n  gameBoard.grid.forEach( (row, rowIdx) => {\n    let htmlRow = htmlGrid.insertRow();\n    htmlRow.id = rowIdx;\n    row.forEach( (cell, colIdx) => {\n      let htmlCell = htmlRow.insertCell();\n      htmlCell.id = `${rowIdx}-${colIdx}`;\n      htmlCell.classList.add(cell.color);\n\n      if (cell.mountain) {\n        htmlCell.classList.add('mountain');\n      } else {\n        cell.id = htmlCell.id;\n        if (cell.king) {\n          htmlCell.innerHTML = cell.count;\n          htmlCell.classList.add('king');\n          if (htmlCell.classList.contains('red')) {\n            htmlCell.classList.add('selected');\n          }\n        } else if (cell.city) {\n          htmlCell.innerHTML = cell.count;\n          htmlCell.classList.add('city');\n        }\n      }\n    });\n  });\n};\n\n// refactor this to use eachHTMLCell\nexport const updateHTML = function (gameBoard) {\n  gameBoard.grid.forEach( (row, rowIdx) => {\n    row.forEach((cell, colIdx) => {\n      let htmlCell = document.getElementById(`${rowIdx}-${colIdx}`);\n      if (!cell.mountain) {\n        if (cell.color !== 'unoccupied') {\n          htmlCell.innerHTML = cell.count;\n        }\n        colors.forEach((color) => htmlCell.classList.remove(color));\n        htmlCell.classList.add(cell.color);\n      }\n\n      htmlCell.isHidden ? htmlCell.classList.add('hidden') : htmlCell.classList.remove('hidden');\n    });\n  });\n};\n\nexport const unselectOtherCells = function (board) {\n  eachHTMLCell(board, (htmlCell) => (htmlCell.classList.remove('selected')));\n};\n\nexport const shuffle = function (array) {\n    let counter = array.length;\n\n    while (counter > 0) {\n        let index = Math.floor(Math.random() * counter);\n\n        counter--;\n\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n\n    return array;\n};\n\nexport const getNextCoordinates = function (id, direction) {\n    let nextId;\n    let coordinates = id.split('-').map(char => parseInt(char));\n\n    switch (direction) {\n      case 'up':\n        return [coordinates[0]-1, coordinates[1]];\n      case 'down':\n        return [coordinates[0]+1, coordinates[1]];\n      case 'left':\n        return [coordinates[0], coordinates[1]-1];\n      case 'right':\n        return [coordinates[0], coordinates[1]+1];\n      default:\n        console.log('Invalid Move');\n    }\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/util.js","class Cell {\n  constructor() {\n    this.color = \"unoccupied\";\n    this.count = 0;\n    this.isHidden = false;\n    this.id = null;\n  }\n\n  capture(otherCell) {\n    if (this.count > 1) {\n      if (this.color === otherCell.color) {\n        otherCell.count = otherCell.count + this.count - 1;\n      } else {\n        if (this.count - 1 > otherCell.count) {\n          otherCell.count = this.count - otherCell.count - 1;\n          otherCell.color = this.color;\n        } else {\n          otherCell.count = otherCell.count - (this.count - 1);\n        }\n      }\n      this.count = 1;\n    }\n  }\n\n  generateTroops() {\n    this.count++;\n  }\n\n  reveal() {\n    this.isHidden = false;\n  }\n}\n\nexport default Cell;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cell.js","class Command {\n  constructor(cell, nextCoordinates, direction){\n    this.cell = cell;\n    this.nextCoordinates = nextCoordinates;\n    this.direction = direction;\n  }\n\n  execute(board) {\n    let nextCell = board.grid[this.nextCoordinates[0]][this.nextCoordinates[1]];\n    if (this.cell && this.cell.color !== 'unoccupied' && !nextCell.mountain) {\n      // TODO remove direction class from currentHTMLCell\n      this.cell.capture(nextCell);\n\n      // TODO remove fog from adjacent pieces\n      if (this.cell.color === 'red') {\n        this.removeFog();\n      }\n    }\n  }\n\n  removeFog() {\n    // get all htmlCells adjacent to the nextHTMLCell, and remove fog class\n  }\n}\n\nexport default Command;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/command.js","import Cell from './cell';\nimport { City, Mountain, King } from './special_cells';\nimport { shuffle } from './util';\n\nclass Board {\n  constructor() {\n    this.grid = [];\n    this.populateBoard();\n    this.kings = this.allCells().filter(cell => cell.king);\n    this.cities = this.cities();\n  }\n\n  populateBoard() {\n    // create an array with all cities, mountains, and cells\n    let allCells = [];\n\n     for (var i = 0; i < 80; i++) {\n       allCells.push(new Cell());\n     }\n\n     for (var j = 0; j < 10; j++) {\n       allCells.push(Mountain);\n     }\n\n     for (var k = 0; k < 8; k++) {\n       allCells.push(new City());\n     }\n\n     allCells.push(new King('red'));\n     allCells.push(new King('blue'));\n\n    // shuffle array\n    shuffle(allCells);\n\n    // iterate through shuffled array and push things into the grid\n    for (var rowIdx = 0; rowIdx < 10; rowIdx++) {\n      let row = [];\n      for (var colIdx = 0; colIdx < 10; colIdx++) {\n        row.push(allCells.pop());\n      }\n\n      this.grid.push(row);\n    }\n  }\n\n  allCells() {\n    return this.grid.reduce( (row1, row2) => row1.concat(row2));\n  }\n\n  cities() {\n    return this.allCells().filter(cell => cell.city);\n  }\n\n  capturedTerritory () {\n    return this.allCells().filter(cell => cell.color !== 'unoccupied');\n  }\n\n  findCell(id) {\n    return this.allCells().find(cell => cell.id === id);\n  }\n\n  winner() {\n    if (this.kings[0].color === this.kings[1].color) {\n      return this.kings[0].color;\n    }\n  }\n}\n\n\nexport default Board;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/board.js","import Cursor from './cursor';\nimport Adversary from './adversary';\n\nclass Game {\n  constructor(board) {\n    this.board = board;\n    this.cursor = new Cursor(board);\n    this.adversary = new Adversary(board);\n\n    this.movementInterval = setInterval(this.iterateMovement.bind(this), 500);\n    this.cityInterval = setInterval(this.iterateCityGeneration.bind(this), 1000);\n    this.territoryInterval = setInterval(this.iterateTerritoryGeneration.bind(this), 25000);\n  }\n\n\n  iterateMovement() {\n    let userCommand = this.cursor.nextMove();\n    if (userCommand) {\n      userCommand.execute(this.board);\n    }\n\n    // this.adversary.nextMove().execute();\n\n    //TODO this is terrible!  it ends the game before you actually take the enemy piece\n    if (this.board.winner()) {\n      this.endGame(this.board.winner());\n    }\n  }\n\n  iterateCityGeneration() {\n    this.board.cities.forEach( (city) => {\n      if (city.color !== 'unoccupied' || city.count < 40) {\n        city.generateTroops();\n      }\n    });\n  }\n\n  iterateTerritoryGeneration() {\n    this.board.capturedTerritory().forEach((cell) => cell.generateTroops());\n  }\n\n  removeIntervals() {\n    clearInterval(this.movementInterval);\n    clearInterval(this.cityInterval);\n    clearInterval(this.territoryInterval);\n  }\n\n  endGame(winner) {\n    alert(`${winner} wins!`);\n    this.removeIntervals();\n  }\n\n\n}\n\nexport default Game;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game.js","import Command from './command';\nimport { getNextCoordinates } from './util';\n\nclass Adversary {\n  constructor(board) {\n    this.board = board;\n    this.king = board.cities.filter(cell => cell.king && cell.color === 'blue');\n    this.moves = [];\n    this.mode = 'explore';\n  }\n\n  nextMove() {\n    this.mode === 'explore' ? this.explore() : this.attack();\n    return this.moves.shift();\n  }\n\n  explore() {\n    // pick a random direction, and go as far as you can in that direction, starting from king\n    // TODO DON'T RUN INTO A CITY THOUGH\n\n    if (this.canSeePlayer()) {\n      this.moves = [];\n      this.mode = 'attack';\n      this.attack();\n    } else if (this.moves.length === 0) {\n      let newMoves = [];\n\n      this.moves = this.moves.concat(newMoves);\n    }\n  }\n\n  attack() {\n    // send armies at player squares.  naively follow back to user.\n  }\n\n  kill() {\n    // once adversary has seen the playerKing, send armies directly to enemy king.\n  }\n\n  canSeePlayer() {\n    \n  }\n}\n\nexport default Adversary;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/adversary.js","import Command from './command';\nimport { getNextCoordinates } from './util';\n\nclass Cursor {\n  constructor(board) {\n    this.board = board;\n    this.moves = [];\n  }\n\n  move(direction) {\n    let currentHTMLCell = document.getElementsByClassName('selected')[0];\n    let nextCoordinates = getNextCoordinates(currentHTMLCell.id, direction);\n\n    if(nextCoordinates.every(coord => coord >= 0 && coord <= 9)) {\n      let currentCell = this.board.findCell(currentHTMLCell.id);\n      let nextHTMLCell = document.getElementById(nextCoordinates.join('-'));\n\n      currentHTMLCell.classList.remove('selected');\n      nextHTMLCell.classList.add('selected');\n\n      if (currentCell) {\n        // TODO Add direction class to the corresponding htmlCell\n        this.moves.push(new Command(currentCell, nextCoordinates, direction));\n      }\n    }\n  }\n\n  clearMoves() {\n    this.moves = [];\n  }\n\n  nextMove() {\n    if (this.moves.length === 0) {\n      return false;\n    }\n\n    while (this.moves[0].cell.color !== 'red' || this.moves[0].cell.count < 2) {\n      // TODO remove the direction class from the corresponding htmlCell\n      this.moves.shift();\n      if (this.moves.length === 0) {\n        return false;\n      }\n    }\n\n    return this.moves.shift();\n  }\n\n  // getNextCoordinates(id, direction) {\n  //   let nextId;\n  //   let coordinates = id.split('-').map(char => parseInt(char));\n  //\n  //   switch (direction) {\n  //     case 'up':\n  //       return [coordinates[0]-1, coordinates[1]];\n  //     case 'down':\n  //       return [coordinates[0]+1, coordinates[1]];\n  //     case 'left':\n  //       return [coordinates[0], coordinates[1]-1];\n  //     case 'right':\n  //       return [coordinates[0], coordinates[1]+1];\n  //     default:\n  //       console.log('Invalid Move');\n  //   }\n  // }\n}\n\nexport default Cursor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cursor.js","import Game from './game';\nimport Board from './board';\nimport { populateHTML, updateHTML, unselectOtherCells } from './util';\n\nlet board = new Board();\nlet game = new Game(board);\nlet cursor = game.cursor;\nlet htmlGrid = document.getElementById(\"grid\");\n\npopulateHTML(board, htmlGrid);\n\nfunction selectCell(e) {\n    if (e.target !== e.currentTarget) {\n        let cell = e.target;\n        if (!cell.classList.contains('selected')) {\n          // TODO: instead, store the previously selected cell and just remove it from that\n          unselectOtherCells(board);\n          cell.classList.add('selected');\n        }\n    }\n    e.stopPropagation();\n}\n\nhtmlGrid.addEventListener(\"click\", selectCell);\n\nkey('q', () => cursor.clearMoves());\nkey('w', () => cursor.move('up'));\nkey('up', () => cursor.move('up'));\nkey('s', () => cursor.move('down'));\nkey('down', () => cursor.move('down'));\nkey('a', () => cursor.move('left'));\nkey('left', () => cursor.move('left'));\nkey('d', () => cursor.move('right'));\nkey('right', () => cursor.move('right'));\n\nsetInterval( (() => updateHTML(board)), 500);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/generals.js","import Cell from './cell';\n\nclass City extends Cell {\n  constructor() {\n    super();\n    this.city = true;\n    this.count = 40;\n  }\n}\n\nclass King extends City {\n  constructor(color) {\n    super();\n    this.king = true;\n    this.color = color;\n    this.count = 1;\n  }\n}\n\nlet Mountain = new Cell();\nMountain.mountain = true;\nObject.freeze(Mountain);\n\n\n\nexport { City, Mountain, King };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/special_cells.js"],"sourceRoot":""}